#!/usr/bin/python3

"""
Simple cgi-bin script to convert an image on the fly from JPEG to or from WEBP, and 
serve it in place of the original

Requires ImageMagick for converting to JPEG, and cwebp for converting to WEBP

"""

from urllib import parse
import os
import sys
import subprocess

ROOT = "/home/httpd/nosher.net/docs/"
img = width = content_type = request = output = None

# test requests - uncomment to use
# request = [("i", "https://static.nosher.net/images/2023/2023-09-02DragonflyRide/imgp6441-s.jpg"), ("t", "webp")]
# request = [("i", "https://static.nosher.net/archives/computers/images/ads_002-s.jpg"), ("t", "webp")]

if "QUERY_STRING" in os.environ:
    request = parse.parse_qsl(os.environ["QUERY_STRING"])

if request:
    for (k,v) in request:
        if k == "i":
            img = v
            img = img.replace(".jpg", "").replace(".webp", "").replace("https://static.nosher.net", "")
        elif k == "w":
            width = v
        elif k == "t":
            content_type = v
    try:
        fpath = ROOT + "/" + img
        if os.path.isfile(fpath + ".jpg"):
            fpath = fpath + ".jpg"
        else:
            fpath = fpath + ".webp"
            # is webp already
        print ("*", fpath)
        # TODO : provide no-op shortcut for converting to webp when image is already webp
        if content_type == "webp":
            data = subprocess.run(["/usr/bin/cwebp", "-quiet", "-o", "-", "-m", "2", fpath], stdout=subprocess.PIPE)
        elif content_type == "jpg":
            try:
                data = subprocess.run(["magick", fpath, "JPEG:-"], stdout=subprocess.PIPE)
            except:
                data = subprocess.run(["convert", fpath, "JPEG:-"], stdout=subprocess.PIPE)

        else:
            print("Content-type: text/html\n\n")
            print("Exception processing file: invalid format {} for {}".format(content_type, fpath))
            sys.exit()
                
        sys.stdout.buffer.write(bytes("Content-type: image/{}\n\n".format(content_type), "utf-8"))
        sys.stdout.buffer.write(data.stdout)

    except Exception as err:
        print("Content-type: text/html\n\n")
        print("Exception processing file: ", err)
    
else:
    print("Content-type: text/html\n\n")
    print("Error: not a valid request")
